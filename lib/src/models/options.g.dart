// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'options.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

Options _$OptionsFromJson(Map<String, dynamic> json) => Options(
      json['id'],
      stringToDateTime(json['created_at'] as String?),
      stringToDateTime(json['updated_at'] as String?),
      json['object'],
      json['mode'],
      json['additional_handling'] as bool?,
      json['address_validation_level'] as String?,
      json['alcohol'] as bool?,
      json['billing_ref'] as String?,
      json['bill_receiver_amount'] as String?,
      json['bill_receiver_postal_code'] as String?,
      json['bill_third_party_account'] as String?,
      json['bill_third_party_country'] as String?,
      json['bill_third_party_postal_code'] as String?,
      json['by_drone'] as bool?,
      json['carbon_neutral'] as bool?,
      json['carrier_insurance_amount'] as String?,
      json['carrier_notification_email'] as String?,
      json['carrier_notification_sms'] as String?,
      json['certified_mail'] as bool?,
      json['cod_address_id'] as String?,
      json['cod_amount'] as String?,
      json['cod_method'] as String?,
      json['commercial_invoice_format'] as String?,
      json['commercial_invoice_letterhead'] as String?,
      json['commercial_invoice_signature'] as String?,
      json['commercial_invoice_size'] as String?,
      json['cost_center'] as String?,
      json['currency'] as String?,
      json['customs_broker_address_id'] as String?,
      json['customs_include_shipping'] as bool?,
      json['declared_value'] as String?,
      json['delivered_duty_paid'] as bool?,
      json['delivery_confirmation'] as String?,
      json['delivery_time_preference'] as String?,
      json['dropoff_max_datetime'] == null
          ? null
          : DateTime.parse(json['dropoff_max_datetime'] as String),
      json['dropoff_type'] as String?,
      json['dry_ice'] as bool?,
      json['dry_ice_medical'] as bool?,
      json['dry_ice_weight'] as String?,
      json['duty_payment'] as Map<String, dynamic>?,
      json['duty_payment_account'] as String?,
      json['endorsement'] as String?,
      json['end_shipper_id'] as String?,
      json['freight_charge'] as String?,
      json['group'] as String?,
      json['handling_instructions'] as String?,
      json['hazmat'] as String?,
      json['hold_for_pickup'] as bool?,
      json['image_format'] as String?,
      json['importer_address_id'] as String?,
      json['import_federal_tax_id'] as String?,
      json['import_state_tax_id'] as String?,
      json['incoterm'] as String?,
      json['invoice_number'] as String?,
      json['label_date'] == null
          ? null
          : DateTime.parse(json['label_date'] as String),
      json['label_format'] as String?,
      json['label_size'] as String?,
      json['license_number'] as String?,
      json['machinable'] as String?,
      json['neutral_delivery'] as bool?,
      json['non_contact'] as bool?,
      json['overlabel_construct_code'] as String?,
      json['overlabel_construct_tracking_number'] as String?,
      json['parties_to_transaction_are_related'] as String?,
      json['payment'] as Map<String, dynamic>?,
      json['peel_and_return'] as bool?,
      json['pickup_max_datetime'] == null
          ? null
          : DateTime.parse(json['pickup_max_datetime'] as String),
      json['pickup_min_datetime'] == null
          ? null
          : DateTime.parse(json['pickup_min_datetime'] as String),
      json['po_sort'] as String?,
      json['postage_label_inline'] as bool?,
      (json['print_custom'] as List<dynamic>)
          .map((e) => e as Map<String, dynamic>)
          .toList(),
      json['print_custom_1'] as String?,
      json['print_custom_1_barcode'] as bool?,
      json['print_custom_1_code'] as String?,
      json['print_custom_2'] as String?,
      json['print_custom_2_barcode'] as bool?,
      json['print_custom_2_code'] as String?,
      json['print_custom_3'] as String?,
      json['print_custom_3_barcode'] as bool?,
      json['print_custom_3_code'] as String?,
      json['print_rate'] as bool?,
      json['receiver_liquor_license'] as String?,
      json['registered_mail'] as bool?,
      (json['registered_mail_amount'] as num?)?.toDouble(),
      json['return_receipt'] as bool?,
      json['return_service'] as String?,
      json['saturday_delivery'] as bool?,
      json['settlement_method'] as String?,
      json['smartpost_hub'] as String?,
      json['smartpost_manifest'] as String?,
      json['special_rates_eligibility'] as String?,
      json['suppress_etd'] as bool?,
    );

Map<String, dynamic> _$OptionsToJson(Options instance) => <String, dynamic>{
      'object': instance.objectType,
      'mode': instance.mode,
      'id': instance.id,
      'created_at': dateTimeToString(instance.createdAt),
      'updated_at': dateTimeToString(instance.updatedAt),
      'additional_handling': instance.additionalHandling,
      'address_validation_level': instance.addressValidationLevel,
      'alcohol': instance.isAlcohol,
      'billing_ref': instance.billingRef,
      'bill_receiver_amount': instance.billReceiverAmount,
      'bill_receiver_postal_code': instance.billReceiverPostalCode,
      'bill_third_party_account': instance.billThirdPartyAccount,
      'bill_third_party_country': instance.billThirdPartyCountry,
      'bill_third_party_postal_code': instance.billThirdPartyPostalCode,
      'by_drone': instance.deliverByDrone,
      'carbon_neutral': instance.enableCarbonNeutral,
      'carrier_insurance_amount': instance.carrierInsuranceAmount,
      'carrier_notification_email': instance.carrierNotificationEmail,
      'carrier_notification_sms': instance.carrierNotificationSms,
      'certified_mail': instance.useCertifiedMail,
      'cod_address_id': instance.codAddressId,
      'cod_amount': instance.codAmount,
      'cod_method': instance.codMethod,
      'commercial_invoice_format': instance.commercialInvoiceFormat,
      'commercial_invoice_letterhead': instance.commercialInvoiceLetterhead,
      'commercial_invoice_signature': instance.commercialInvoiceSignature,
      'commercial_invoice_size': instance.commercialInvoiceSize,
      'cost_center': instance.costCenter,
      'currency': instance.currency,
      'customs_broker_address_id': instance.customsBrokerAddressId,
      'customs_include_shipping': instance.customsIncludeShipping,
      'declared_value': instance.declaredValue,
      'delivered_duty_paid': instance.deliveredDutyPaid,
      'delivery_confirmation': instance.deliveryConfirmation,
      'delivery_time_preference': instance.deliveryTimePreference,
      'dropoff_max_datetime': instance.dropoffMaxDatetime?.toIso8601String(),
      'dropoff_type': instance.dropoffType,
      'dry_ice': instance.isDryIce,
      'dry_ice_medical': instance.isDryIceMedical,
      'dry_ice_weight': instance.dryIceWeight,
      'duty_payment': instance.dutyPayment,
      'duty_payment_account': instance.dutyPaymentAccount,
      'endorsement': instance.endorsement,
      'end_shipper_id': instance.endShipperId,
      'freight_charge': instance.freightCharge,
      'group': instance.group,
      'handling_instructions': instance.handlingInstructions,
      'hazmat': instance.hazmat,
      'hold_for_pickup': instance.holdForPickup,
      'image_format': instance.imageFormat,
      'importer_address_id': instance.importerAddressId,
      'import_federal_tax_id': instance.importFederalTaxId,
      'import_state_tax_id': instance.importStateTaxId,
      'incoterm': instance.incoterm,
      'invoice_number': instance.invoiceNumber,
      'label_date': instance.labelDate?.toIso8601String(),
      'label_format': instance.labelFormat,
      'label_size': instance.labelSize,
      'license_number': instance.licenseNumber,
      'machinable': instance.machinable,
      'neutral_delivery': instance.enableNeutralDelivery,
      'non_contact': instance.enableNonContact,
      'overlabel_construct_code': instance.overlabelConstructCode,
      'overlabel_construct_tracking_number':
          instance.overlabelConstructTrackingNumber,
      'parties_to_transaction_are_related':
          instance.partiesToTransactionAreRelated,
      'payment': instance.payment,
      'peel_and_return': instance.enablePeelAndReturn,
      'pickup_max_datetime': instance.pickupMaxDatetime?.toIso8601String(),
      'pickup_min_datetime': instance.pickupMinDatetime?.toIso8601String(),
      'po_sort': instance.poSort,
      'postage_label_inline': instance.postageLabelInline,
      'print_custom': instance.printCustom,
      'print_custom_1': instance.printCustom1,
      'print_custom_1_barcode': instance.includePrintCustom1Barcode,
      'print_custom_1_code': instance.printCustom1Code,
      'print_custom_2': instance.printCustom2,
      'print_custom_2_barcode': instance.includePrintCustom2Barcode,
      'print_custom_2_code': instance.printCustom2Code,
      'print_custom_3': instance.printCustom3,
      'print_custom_3_barcode': instance.includePrintCustom3Barcode,
      'print_custom_3_code': instance.printCustom3Code,
      'print_rate': instance.includePrintRate,
      'receiver_liquor_license': instance.receiverLiquorLicense,
      'registered_mail': instance.useRegisteredMail,
      'registered_mail_amount': instance.registeredMailAmount,
      'return_receipt': instance.includeReturnReceipt,
      'return_service': instance.returnService,
      'saturday_delivery': instance.enableSaturdayDelivery,
      'settlement_method': instance.settlementMethod,
      'smartpost_hub': instance.smartpostHub,
      'smartpost_manifest': instance.smartpostManifest,
      'special_rates_eligibility': instance.specialRatesEligibility,
      'suppress_etd': instance.suppressEtd,
    };
